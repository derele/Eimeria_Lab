E57_infection <- read.csv("https://raw.githubusercontent.com/derele/Eimeria_Lab/master/data/Experiment_results/E7_112018_Eim_CEWE_qPCR.csv") %>%
select(!X)
P3_infection <- read.csv("https://raw.githubusercontent.com/derele/Eimeria_Lab/master/data/Experiment_results/P3_112019_Eim_CEWE_qPCR.csv") %>%
select(!X)
#load the facs data for P4, E57, E11
P4_FACS <- read.csv("https://raw.githubusercontent.com/derele/Eimeria_Lab/master/data/Experiment_results/P4_082020_Eim_FACS.csv") %>%
select(!X)
E57_FACS <- read.csv("https://raw.githubusercontent.com/derele/Eimeria_Lab/master/data/Experiment_results/E7_112018_Eim_FACS.csv") %>%
select(!X)
E11_FACS <- read.csv("https://raw.githubusercontent.com/derele/Eimeria_Lab/master/data/Experiment_results/E11_012021_Eim_FACS.csv") %>%
select(!X) %>%
select(!X.1)
#write a function to change LM_ to LM
#write a function to replace LM_ with LM
replace_LM <- function (x) {
str_replace_all(x$EH_ID, "LM_", "LM")
}
#replace LMs
P4_FACS$EH_ID <- replace_LM(P4_FACS)
E57_FACS$EH_ID <- replace_LM(E57_FACS)
E11_FACS$EH_ID <- replace_LM(E11_FACS)
P4_infection$EH_ID <- replace_LM(P4_infection)
E57_infection$EH_ID <- replace_LM(E57_infection)
P3_infection$EH_ID <- replace_LM(P3_infection)
#Eim_MC in some infection intensity column is a character and in others is logical
#change it so it is the same
E57_infection$Eim_MC <- as.logical(E57_infection$Eim_MC)
#write a function to create a list of common column names
names_common <- function(x, y) {
intersect(colnames(x), colnames(y))
}
#write a function to left join
join_my_tables <- function (x, y) {
x %>%
left_join(y, by = c(names_common(x, y)))
}
#try to use the reduce to bind the tables together
#reduce works like apply, but you need to have a list for it to work on
Challenge_intensity <- list(Challenge, P4_infection, E57_infection, P3_infection) %>%
reduce(join_my_tables)
View(Challenge_intensity)
str(E57_infection)
str(P4_infection)
str(P3_infection)
Challenge_FACS_intensity <- list(Challenge_intensity, P4_FACS, E57_FACS, E11_FACS) %>%
reduce(join_my_tables)
View(Challenge_FACS_intensity)
colnames(Challenge_FACS_intensity)
P3_infection <- read.csv("https://raw.githubusercontent.com/derele/Eimeria_Lab/master/data/Experiment_results/P3_112019_Eim_CEWE_qPCR.csv") %>%
select(!X)
View(P3_infection)
#load the infection intensity data
P4_infection <- read.csv("https://raw.githubusercontent.com/derele/Eimeria_Lab/master/data/Experiment_results/P4_082020_Eim_CEWE_qPCR.csv")
View(P4_FACS)
View(P4_infection)
View(E57_FACS)
View(E57_infection)
E57_infection <- read.csv("https://raw.githubusercontent.com/derele/Eimeria_Lab/master/data/Experiment_results/E7_112018_Eim_CEWE_qPCR.csv") %>%
select(!X)
View(E57_infection)
str(E57_infection)
#Eim_MC in some infection intensity column is a character and in others is logical
#change it so it is the same
P4_infection$Eim_MC <- as.character(P4_infection$Eim_MC)
View(P4_infection)
source("~/Documents/GitHub/Eimeria_Lab/R/Facs_Challenge.R", echo=TRUE)
challengep3 <- read.csv("https://raw.githubusercontent.com/derele/Eimeria_Lab/master/data_products/Challenge_FACS.csv")
View(Challenge_FACS_intensity)
#try to use the reduce to bind the tables together
#reduce works like apply, but you need to have a list for it to work on
Challenge_intensity <- list(Challenge, P4_infection, E57_infection, P3_infection) %>%
reduce(join_my_tables)
Challenge_FACS_intensity <- list(Challenge_intensity, P4_FACS, E57_FACS, E11_FACS) %>%
reduce(join_my_tables)
View(Challenge_intensity)
View(Challenge_intensity)
View(Challenge_FACS_intensity)
#load libraries
library(tidyr)
library(dplyr)
library(tidyverse)
library(purrr)
#load the challenge infection table
Challenge <- read.csv("https://raw.githubusercontent.com/derele/Eimeria_Lab/master/data_products/Challenge_p4_p3.csv")
#load the infection intensity data
P4_infection <- read.csv("https://raw.githubusercontent.com/derele/Eimeria_Lab/master/data/Experiment_results/P4_082020_Eim_CEWE_qPCR.csv")
E57_infection <- read.csv("https://raw.githubusercontent.com/derele/Eimeria_Lab/master/data/Experiment_results/E7_112018_Eim_CEWE_qPCR.csv") %>%
select(!X)
P3_infection <- read.csv("https://raw.githubusercontent.com/derele/Eimeria_Lab/master/data/Experiment_results/P3_112019_Eim_CEWE_qPCR.csv") %>%
select(!X)
#load the facs data for P4, E57, E11
P4_FACS <- read.csv("https://raw.githubusercontent.com/derele/Eimeria_Lab/master/data/Experiment_results/P4_082020_Eim_FACS.csv") %>%
select(!X)
E57_FACS <- read.csv("https://raw.githubusercontent.com/derele/Eimeria_Lab/master/data/Experiment_results/E7_112018_Eim_FACS.csv") %>%
select(!X)
E11_FACS <- read.csv("https://raw.githubusercontent.com/derele/Eimeria_Lab/master/data/Experiment_results/E11_012021_Eim_FACS.csv") %>%
select(!X) %>%
select(!X.1)
#write a function to change LM_ to LM
#write a function to replace LM_ with LM
replace_LM <- function (x) {
str_replace_all(x$EH_ID, "LM_", "LM")
}
#replace LMs
P4_FACS$EH_ID <- replace_LM(P4_FACS)
E57_FACS$EH_ID <- replace_LM(E57_FACS)
E11_FACS$EH_ID <- replace_LM(E11_FACS)
P4_infection$EH_ID <- replace_LM(P4_infection)
E57_infection$EH_ID <- replace_LM(E57_infection)
P3_infection$EH_ID <- replace_LM(P3_infection)
#Eim_MC in some infection intensity column is a character and in others is logical
#change it so it is the same
P4_infection$Eim_MC <- as.character(P4_infection$Eim_MC)
#write a function to create a list of common column names
names_common <- function(x, y) {
intersect(colnames(x), colnames(y))
}
#write a function to left join
join_my_tables <- function (x, y) {
x %>%
left_join(y, by = c(names_common(x, y)))
}
#try to use the reduce to bind the tables together
#reduce works like apply, but you need to have a list for it to work on
Challenge_intensity <- list(Challenge, P4_infection, E57_infection, P3_infection) %>%
reduce(join_my_tables)
Challenge_FACS_intensity <- list(Challenge_intensity, P4_FACS, E57_FACS, E11_FACS) %>%
reduce(join_my_tables)
colnames(Challenge_FACS_intensity)
write.csv(Challenge_FACS_intensity, "~/Documents/GitHub/Eimeria_Lab/data_products/FACS_intensity.csv", row.names = FALSE)
### This could be an example of how to access particular subsets of
### the data
library(dplyr)
library(magrittr)
library(stringr)
library(ggplot2)
#reading the overview table. In each row there is a link to the raw data for each experiment
OV <- read.csv("https://raw.githubusercontent.com/derele/Eimeria_Lab/master/Eimeria_Lab_overview.csv")
## ## Only the challenge experiments
#a list of the names of each experiments
# you can use it later, to select the experiments from ov
ChallengeEx  <- c("E57", "E10", "E11", "P4", "P3")
## ## download and append the weigth tables
#lapply: applies a function to every element of the list
#we select the challenge experimetns and the weight columns
#we apply to every element of the list the function read.csv
W <- lapply(OV[OV$Experiment%in%ChallengeEx, "weight"], read.csv)
#reduce: works on 1st and 2nd element, produces result and then uses the result
#with the 3rd element and so on
#we apply in this case the function rbind
Weight <- Reduce(rbind, W)
## ## Same for shedding
O <- lapply(OV[OV$Experiment%in%ChallengeEx, "shedding"], read.csv)
Oocysts <- Reduce(rbind, O)
## ## some don't agree
table(Oocysts$labels%in%Weight$labels)
table(Weight$labels%in%Oocysts$labels)
## there are more in in the weights table which are not found in the
## oocysts though
Weight[!Weight$labels%in%Oocysts$labels, ]
## But if the weight is NA the mouse was dead
table(Weight[!Weight$labels%in%Oocysts$labels &
is.na(Weight$weight), "dpi"])
Results <- merge(Weight, Oocysts, all=TRUE)
## IDs sometimes with "_" sometimes without
Results$EH_ID <- gsub("LM_", "LM", Results$EH_ID)
## For now we hav to exclude those E11aBMI which have no mouse IDs
Results <- Results[!is.na(Results$EH_ID), ]
## Same for design
D <- lapply(OV[OV$Experiment%in%ChallengeEx, "design"], read.csv)
Des.cols <- Reduce(intersect, lapply(D, colnames))
Design <- Reduce(rbind, lapply(D, "[", Des.cols))
## remove all whitespaces
Design %>%
mutate(across(where(is.character), str_trim)) ->
Design
## IDs sometimes with "_" sometimes without
Design$EH_ID <- gsub("LM_", "LM", Design$EH_ID)
#### NOW ALSO REMOVE EXPERIMENT column?
### Not for now
ALL <- merge(Design, Results, all=TRUE, by="EH_ID")
table(ALL$experiment.x, ALL$experiment.y)
Design$experiment[Design$experiment%in%c("E5", "E7")] <- "E57"
Results$experiment[Results$experiment%in%c("E5", "E7")] <- "E57"
ALL <- merge(Design, Results, all=TRUE)
### some mice don't have an infection history
forgotten.mice <- unique(ALL[is.na(ALL$primary_infection), "EH_ID"])
Design$EH_ID[!Design$EH_ID%in%Results$EH_ID]
## all the data has a mouse ID
table(is.na(ALL$EH_ID))
## but feces weights are ZERO T ( when the oocyst counts are NA ->
## the mouse was dead)!
table(ALL$feces_weight==0)
##  only one prolbem remaining after asking Alice for better data...
ALL[which(ALL$feces_weight==0 &
!is.na(ALL$oocyst_sq2)), ]
ALL %>% filter(!is.na(challenge_infection)) %>%
rowwise() %>% mutate(OO4sq = rowSums(across(starts_with("oocyst_")))) %>%
## 0.1Âµl per square -> *10.000 to scale up to ml
mutate(OOC=(OO4sq/4*10000)/dilution) %>%
## we have ZEROS in feces weight (also when we counted oocysts) so we better don't
## calculate OPG for now but just max (see below)
## mutate(OPG=OOC/feces_weight) %>%
## also re-calculate relative weight, as this seems to have errors
## from a spreadsheet program (wtf!)
mutate(relative_weight= weight/weight_dpi0*100) %>%
## also look at this for OPG above (by uncommenting)
## select(feces_weight, starts_with("oocyst_"), OO4sq, OOC) %>%
## look at this for controlling the weight calculation
## select(EH_ID, dpi, infection, weight, relative_weight) %>%
## print(n=40)
## the E88 innoculum in E57 challenge infection was "not
## working", these mice are basically unifected controls
mutate(challenge_infection=ifelse(!experiment%in%"E57",
challenge_infection,
ifelse(challenge_infection%in%"E88", "UNI",
challenge_infection))) %>%
## then correct the infection history
mutate(infection_history=paste0(primary_infection, "_",
challenge_infection)) ->
ALL
## For an analysis of immune protection we want the following
## categories in one column
ALL$infection_type <- NA
## primary_E88
ALL$infection_type[ALL$infection_history%in%"UNI_E88" &
ALL$infection%in%"challenge"] <-  "primary_E88"
ALL$infection_type[ALL$primary_infection%in%"E88" &
ALL$infection%in%"primary"] <-  "primary_E88"
## homologous_E88
ALL$infection_type[ALL$infection_history%in%"E88_E88" &
ALL$infection%in%"challenge"] <-  "homologous_E88"
## heterologous_E88
ALL$infection_type[ALL$infection_history%in%"E64_E88" &
ALL$infection%in%"challenge"] <-  "heterologous_E88"
## primary_E64  ("UNI_E64" and challenge in infection) E64_* and primary in infection
ALL$infection_type[ALL$infection_history%in%"UNI_E64" &
ALL$infection%in%"challenge"] <-  "primary_E64"
ALL$infection_type[ALL$primary_infection%in%"E64" &
ALL$infection%in%"primary"] <-  "primary_E64"
## homologous_E64
ALL$infection_type[ALL$infection_history%in%"E64_E64" &
ALL$infection%in%"challenge"] <-  "homologous_E64"
## heterologous_E64
ALL$infection_type[ALL$infection_history%in%"E88_E64" &
ALL$infection%in%"challenge"] <-  "heterologous_E64"
## the remaining should be UNI?!
ALL$infection_type[is.na(ALL$infection_type)] <- "UNI"
## ## download and append the infection_intensity tables
#lapply: applies a function to every element of the list
#we select the challenge experimetns and the qpcr columns
#we apply to every element of the list the function read.csv
I <- lapply(OV[OV$Experiment%in%ChallengeEx, "infection_intensity"], read.csv)
#write a function to left join
join_my_tables <- function (x, y) {
x %>%
left_join(y, by = c(names_common(x, y)))
}
I[[2]] <- I[[2]] %>%
select(colnames(I[[1]]))
write.csv(I[[2]], "data/Experiment_results/E1_012017_Eim_CEWE_qPCR.csv", row.names = FALSE)
#reduce: works on 1st and 2nd element, produces result and then uses the result
#with the 3rd element and so on
#we apply in this case the function rbind
Intensity <- Reduce(rbind,I)
ALL <- join_my_tables(ALL, I)
write.csv(ALL, "data_products/Challenge_infections.csv", row.names=FALSE)
write.csv(ALL, "data_products/Challenge_infections.csv", row.names=FALSE)
write.csv(ALL, "data_products/Challenge_infections.csv", row.names=FALSE)
#load libraries
library(tidyr)
library(ggplot2)
library(dplyr)
library(stringr) #to manipulate strings
library(magrittr)
library(janitor)
library(purrr)
#write a function to create a list of common column names
names_common <- function(x, y) {
intersect(colnames(x), colnames(y))
}
#write a function to left join
join_my_tables <- function (x, y) {
x %>%
left_join(y, by = c(names_common(x, y)))
}
#write a function to replace LM_ with LM
replace_LM <- function (x) {
str_replace_all(x$EH_ID, "LM_", "LM")
}
# I can use this as a sample code, but please use the challenge.R
#as a base to add data
#read challenge infections
Challenge_Infections <- read.csv(
"https://raw.githubusercontent.com/derele/Eimeria_Lab/master/data_products/Challenge_infections.csv")
#read experimental design P4
P4_Design <- read.csv(
"https://raw.githubusercontent.com/derele/Eimeria_Lab/master/data/Experimental_design/P4_082020_Eim_DESIGN.csv")
P4_Design$EH_ID <- str_replace_all(P4_Design$EH_ID, "LM_", "LM")
#read Experimental record P4
P4_record <- read.csv(
"https://raw.githubusercontent.com/derele/Eimeria_Lab/master/data/Experiment_results/P4_082020_Eim_record.csv")
P4_record$EH_ID <- str_replace_all(P4_record$EH_ID, "LM_", "LM")
#join P4_Design and P4_record
P4_Des_Rec <- join_my_tables(P4_record, P4_Design)
#add the oocyst counts
P4_oocysts <- read.csv("https://raw.githubusercontent.com/derele/Eimeria_Lab/master/data/Experiment_results/P4_082020_Eim_oocyst.csv")
#join the oocyst counts to the P4_Des_Rec
P4_Experiment <- join_my_tables(P4_Des_Rec, P4_oocysts)
#which column names are common
names_common(P4_Experiment, Challenge_Infections)
#compare the columns of the two dataframes
compare_df_cols(P4_Experiment, Challenge_Infections)
#create column infection_history
P4_Experiment %>%
mutate(infection_history = paste0(primary_infection, "_",
challenge_infection)) -> P4_Experiment
#produce the column infection type
P4_Experiment %>%
mutate(infection_type = case_when(
P4_Experiment$infection == "primary" & primary_infection == "UNI" ~ paste0("UNI"),
P4_Experiment$infection =="challenge" & challenge_infection == "UNI" ~ paste0("UNI"),
P4_Experiment$infection == "primary" ~ paste0("primary_", primary_infection),
P4_Experiment$infection == "challenge" ~ paste0("heterologous_", challenge_infection),
TRUE ~ "other"
)) -> P4_Experiment
#bind the P4 experiments to the challenge infections
Challenge_infections_with_p4 <- bind_rows(Challenge_Infections, P4_Experiment)
#continue now with the p3 data
#read experimental design P3
P3_Design <- read.csv("https://raw.githubusercontent.com/derele/Eimeria_Lab/master/data/Experimental_design/P3_112019_Eim_design.csv")
#replace the LM_ with LM
P3_Design$EH_ID <- replace_LM(P3_Design)
#read Experimental record P4
P3_record <- read.csv("https://raw.githubusercontent.com/derele/Eimeria_Lab/master/data/Experiment_results/P3_112019_Eim_record.csv")
P3_record$EH_ID <- replace_LM(P3_record)
#join P3_Design and P3_record
P3_Des_Rec <- join_my_tables(P3_record, P3_Design)
#add the oocyst counts
P3_oocysts <- read.csv("https://raw.githubusercontent.com/derele/Eimeria_Lab/master/data/Experiment_results/P3_112019_Eim_oocyst.csv")
#join the oocyst counts to the P3_Des_Rec
P3_Experiment <- join_my_tables(P3_Des_Rec, P3_oocysts)
#which column names are common
names_common(P3_Experiment, Challenge_Infections)
#compare the columns of the two dataframes
compare_df_cols(P3_Experiment, Challenge_Infections)
#create column infection_history
P3_Experiment %>%
mutate(infection_history = paste0(primary_infection, "_",
challenge_infection)) -> P3_Experiment
#produce the column infection type
P3_Experiment %>%
mutate(infection_type = case_when(
P3_Experiment$infection == "primary" & primary_infection == "UNI" ~ paste0("UNI"),
P3_Experiment$infection =="challenge" & challenge_infection == "UNI" ~ paste0("UNI"),
P3_Experiment$infection == "primary" ~ paste0("primary_", primary_infection),
P3_Experiment$infection == "challenge" ~ paste0("heterologous_", challenge_infection),
TRUE ~ "other"
)) -> P3_Experiment
#bind the P4, P3 experiments to the challenge infections
#error oocyst_mean in one table as character and in the other as factor
P3_Experiment$oocyst_mean <- as.character(P3_Experiment$oocyst_mean)
Challenge_infections_with_p3_p4 <- bind_rows(Challenge_infections_with_p4, P3_Experiment)
#load the infection intensity data (qPCR)
P4_infection <- read.csv("https://raw.githubusercontent.com/derele/Eimeria_Lab/master/data/Experiment_results/P4_082020_Eim_CEWE_qPCR.csv")
E57_infection <- read.csv("https://raw.githubusercontent.com/derele/Eimeria_Lab/master/data/Experiment_results/E7_112018_Eim_CEWE_qPCR.csv") %>%
select(!X)
P3_infection <- read.csv("https://raw.githubusercontent.com/derele/Eimeria_Lab/master/data/Experiment_results/P3_112019_Eim_CEWE_qPCR.csv") %>%
select(!X)
#replace LM_
P4_infection$EH_ID <- replace_LM(P4_infection)
E57_infection$EH_ID <- replace_LM(E57_infection)
P3_infection$EH_ID <- replace_LM(P3_infection)
#Eim_MC in some infection intensity column is a character and in others is logical
#change it so it is the same
P4_infection$Eim_MC <- as.character(P4_infection$Eim_MC)
#join the tables of challenge infections with infection intensities
Challenge_intensity <- list(Challenge_infections_with_p3_p4, P4_infection, E57_infection, P3_infection) %>%
reduce(join_my_tables)
#write the combination table
write.csv(Challenge_intensity, "~/Documents/GitHub/Eimeria_Lab/data_products/Challenge_infection_intensity.csv", row.names = FALSE)
#write the combination table
write.csv(Challenge_intensity, "~/Documents/GitHub/Eimeria_Lab/data_products/Challenge_infection_intensity.csv", row.names = FALSE)
source('~/GitHub/Eimeria_Lab/R/Challenge_infection_intensities.R')
#join the tables of challenge infections with infection intensities
Challenge_intensity <- list(Challenge_infections_with_p3_p4, P4_infection, E57_infection, P3_infection) %>%
reduce(join_my_tables)
#write a function to create a list of common column names
names_common <- function(x, y) {
intersect(colnames(x), colnames(y))
}
#write a function to left join
join_my_tables <- function (x, y) {
x %>%
left_join(y, by = c(names_common(x, y)))
}
#write a function to replace LM_ with LM
replace_LM <- function (x) {
str_replace_all(x$EH_ID, "LM_", "LM")
}
# I can use this as a sample code, but please use the challenge.R
#as a base to add data
#read challenge infections
Challenge_Infections <- read.csv(
"https://raw.githubusercontent.com/derele/Eimeria_Lab/master/data_products/Challenge_infections.csv")
#read experimental design P4
P4_Design <- read.csv(
"https://raw.githubusercontent.com/derele/Eimeria_Lab/master/data/Experimental_design/P4_082020_Eim_DESIGN.csv")
P4_Design$EH_ID <- str_replace_all(P4_Design$EH_ID, "LM_", "LM")
#read Experimental record P4
P4_record <- read.csv(
"https://raw.githubusercontent.com/derele/Eimeria_Lab/master/data/Experiment_results/P4_082020_Eim_record.csv")
P4_record$EH_ID <- str_replace_all(P4_record$EH_ID, "LM_", "LM")
#join P4_Design and P4_record
P4_Des_Rec <- join_my_tables(P4_record, P4_Design)
#add the oocyst counts
P4_oocysts <- read.csv("https://raw.githubusercontent.com/derele/Eimeria_Lab/master/data/Experiment_results/P4_082020_Eim_oocyst.csv")
#join the oocyst counts to the P4_Des_Rec
P4_Experiment <- join_my_tables(P4_Des_Rec, P4_oocysts)
#which column names are common
names_common(P4_Experiment, Challenge_Infections)
#compare the columns of the two dataframes
compare_df_cols(P4_Experiment, Challenge_Infections)
#create column infection_history
P4_Experiment %>%
mutate(infection_history = paste0(primary_infection, "_",
challenge_infection)) -> P4_Experiment
#produce the column infection type
P4_Experiment %>%
mutate(infection_type = case_when(
P4_Experiment$infection == "primary" & primary_infection == "UNI" ~ paste0("UNI"),
P4_Experiment$infection =="challenge" & challenge_infection == "UNI" ~ paste0("UNI"),
P4_Experiment$infection == "primary" ~ paste0("primary_", primary_infection),
P4_Experiment$infection == "challenge" ~ paste0("heterologous_", challenge_infection),
TRUE ~ "other"
)) -> P4_Experiment
#bind the P4 experiments to the challenge infections
Challenge_infections_with_p4 <- bind_rows(Challenge_Infections, P4_Experiment)
#continue now with the p3 data
#read experimental design P3
P3_Design <- read.csv("https://raw.githubusercontent.com/derele/Eimeria_Lab/master/data/Experimental_design/P3_112019_Eim_design.csv")
#replace the LM_ with LM
P3_Design$EH_ID <- replace_LM(P3_Design)
#read Experimental record P4
P3_record <- read.csv("https://raw.githubusercontent.com/derele/Eimeria_Lab/master/data/Experiment_results/P3_112019_Eim_record.csv")
P3_record$EH_ID <- replace_LM(P3_record)
#join P3_Design and P3_record
P3_Des_Rec <- join_my_tables(P3_record, P3_Design)
#add the oocyst counts
P3_oocysts <- read.csv("https://raw.githubusercontent.com/derele/Eimeria_Lab/master/data/Experiment_results/P3_112019_Eim_oocyst.csv")
#join the oocyst counts to the P3_Des_Rec
P3_Experiment <- join_my_tables(P3_Des_Rec, P3_oocysts)
#which column names are common
names_common(P3_Experiment, Challenge_Infections)
#compare the columns of the two dataframes
compare_df_cols(P3_Experiment, Challenge_Infections)
#create column infection_history
P3_Experiment %>%
mutate(infection_history = paste0(primary_infection, "_",
challenge_infection)) -> P3_Experiment
#produce the column infection type
P3_Experiment %>%
mutate(infection_type = case_when(
P3_Experiment$infection == "primary" & primary_infection == "UNI" ~ paste0("UNI"),
P3_Experiment$infection =="challenge" & challenge_infection == "UNI" ~ paste0("UNI"),
P3_Experiment$infection == "primary" ~ paste0("primary_", primary_infection),
P3_Experiment$infection == "challenge" ~ paste0("heterologous_", challenge_infection),
TRUE ~ "other"
)) -> P3_Experiment
#bind the P4, P3 experiments to the challenge infections
#error oocyst_mean in one table as character and in the other as factor
P3_Experiment$oocyst_mean <- as.character(P3_Experiment$oocyst_mean)
Challenge_infections_with_p3_p4 <- bind_rows(Challenge_infections_with_p4, P3_Experiment)
#load the infection intensity data (qPCR)
P4_infection <- read.csv("https://raw.githubusercontent.com/derele/Eimeria_Lab/master/data/Experiment_results/P4_082020_Eim_CEWE_qPCR.csv")
E57_infection <- read.csv("https://raw.githubusercontent.com/derele/Eimeria_Lab/master/data/Experiment_results/E7_112018_Eim_CEWE_qPCR.csv") %>%
select(!X)
P3_infection <- read.csv("https://raw.githubusercontent.com/derele/Eimeria_Lab/master/data/Experiment_results/P3_112019_Eim_CEWE_qPCR.csv") %>%
select(!X)
#replace LM_
P4_infection$EH_ID <- replace_LM(P4_infection)
E57_infection$EH_ID <- replace_LM(E57_infection)
P3_infection$EH_ID <- replace_LM(P3_infection)
#Eim_MC in some infection intensity column is a character and in others is logical
#change it so it is the same
P4_infection$Eim_MC <- as.character(P4_infection$Eim_MC)
#join the tables of challenge infections with infection intensities
Challenge_intensity <- list(Challenge_infections_with_p3_p4, P4_infection, E57_infection, P3_infection) %>%
reduce(join_my_tables)
#write the combination table
write.csv(Challenge_intensity, "~/Documents/GitHub/Eimeria_Lab/data_products/Challenge_infection_intensity.csv", row.names = FALSE)
#write the combination table
write.csv(Challenge_intensity, "~/Documents/GitHub/Eimeria_Lab/data_products/Challenge_infection_intensity.csv", row.names = FALSE)
#write the combination table
write.csv(Challenge_intensity, "data_products/Challenge_infection_intensity.csv", row.names = FALSE)
#write the combination table
write.csv(Challenge_intensity, "data_products/Challenge_infection_intensity.csv", row.names = FALSE)
#write the combination table
write.csv(Challenge_intensity, "data_products/Challenge_infection_intensity.csv", row.names = FALSE)
View(Challenge_intensity)
#join the tables of challenge infections with infection intensities
Challenge_intensity <- list(Challenge_infections_with_p3_p4, P4_infection, E57_infection, P3_infection) %>%
reduce(join_my_tables)
#write the combination table
write.csv(Challenge_intensity, "data_products/Challenge_infection_intensity.csv", row.names = FALSE)
#write the combination table
write.csv(Challenge_intensity, "data_products/Challenge_infection_intensity.csv", row.names = FALSE)
getwd()
setwd(~/OneDrive/Documents/GitHub/Eimeria_Lab)
setwd(OneDrive/Documents/GitHub/Eimeria_Lab)
setwd( "C:/Users/fay_w/OneDrive/Documents/GitHub/Eimeria_Lab/)
getwd()
